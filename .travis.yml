sudo: true
language: java
jdk: openjdk8
notifications:
  slack:
    rooms:
      - secure: UxXFX+TCULNOrjtxazTFSWFHyVtwCpEfTzWVFIWXWf5Kot98h0epVSDqscrx2sC9UFRNBBweUIyk9M4VkgYgy2JjyE64OswJAw+qSpBm//k90PM8RygFw1IX3sKzoChgrnPKQh6W/2bqjPnQWdZC8HMsqWq5J3vMMdY30r4BifbLweQmUImQbMjXwY+PNVToD9aXMmeTNt/Xm4W7sFD4Nwg4bTDZF/hFC+VjhV4gCYthGeNjFchqnzGRNu/u2RFdkKyBOM2yEtHXvWMjBJJHyouUGRAJJhVQzGulKFgIMGewT01yCQoX9/b6GdtMLvBd53BGAyXGrq7LQqFiE/n1BU1QQtemWQDJuhtN1lBCFGfYa7NJ9nYq12xgrTHSErCakun+THphFGVBuheFAR0lXqj1VjkESf+4wzCUmWx1sV+/Qrk9n+cyg+/yEN2Cvq39mWS43ae0VAC28OYSEtsY1PTKS02sxJ33n40tiohvPnlMyxhyDdjnx9EvQYEgnsDUKmy/6rEbrNX4ZX1YwUPEYe3uK/OE+JpjZRr+I8qPpJgx7NwSpKCHQ7My1KEwAs8t2vj+ZaIPweAaUyKcz24D6H4LrBQXo0jQpjp0JcdxdpoXXTIjrXbUr8oDXBoli5e8SLmrVDjGqjGXADO1jkH3hUOHboXWAYFYymT1l+L2v1Q=
    on_success: always
    on_failure: always
    template:
    - Repo `%{repository_slug}` *%{result}* build (<%{build_url}|#%{build_number}>)
      for commit (<%{compare_url}|%{commit}>) on branch `%{branch}`.
    - 'Execution time: *%{duration}*'
    - 'Message: %{message}'
stages:
- name: build
  if: type = pull_request
- name: dev_deploy
  if: branch = develop AND type = push
- name: prod_deploy
  if: branch = release AND type = push
- name: release
  if: branch = master and type = push
jobs:
  include:
  - stage: build
  - stage: dev_deploy
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - bash scripts/deploy.sh $DEV_MACHINE_PASSWORD $DEV_MACHINE_USERNAME $DEV_MACHINE_IP
  - stage: prod_deploy
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - bash scripts/deploy.sh $PROD_MACHINE_PASSWORD $PROD_MACHINE_USERNAME $PROD_MACHINE_IP
  - stage: release
    before_install:
    - sudo apt-get install sshpass xml-twig-tools
    script:
    - bash scripts/release.sh
    before_deploy:
    - git config --global user.name "${GH_USERNAME}";
    - git config credential.helper "store --file=.git/credentials";
    - echo "https://${GH_TOKEN}:@github.com" > .git/credentials;
    - git tag ${VERSION}
    deploy:
      provider: releases
      api_key: "${GH_TOKEN}"
      name: v${VERSION} ($(date +'%m/%d/%Y'))
      skip_cleanup: true
      on:
        branch: master
